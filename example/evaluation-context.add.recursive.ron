op 90 : integer _
op 50 : _ + _
op 40 : _ is _
op 10 : _ -> _
op 10 : _ --> _

syntax {
    e ::=                # 式
        n                # 数
      | e + e            # 足し算
    v ::= n              # 値
    n ::= <integer>      # 整数
}

context {
    # 評価文脈：再帰的な記述：左から順に簡約    
    E ::= _ | e + E | E + v

    # 評価文脈の簡約
    E [e1] -> E [e2] {
        e1 -> e2
    }
}

n1 + n2 -> n3 {
    <n3 is n1 + n2>
}

e1 --> e2 {
    e1 -> e3
    e3 --> e2
}

e --> e' {
    e -> e'
}

main {
    (1 + 2) + (3 + 4) --> x
    # x = 10
}